//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "LeaderboardPage.xaml.h"

void ::Connect4___GUI::LeaderboardPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///LeaderboardPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}

void ::Connect4___GUI::LeaderboardPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->back_button = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->back_button))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Connect4___GUI::LeaderboardPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&LeaderboardPage::back_button_Click);
        }
        break;
    case 3:
        {
            this->PlayerScores = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->PlayerScores))->Loaded += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Connect4___GUI::LeaderboardPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&LeaderboardPage::PageLoad);
        }
        break;
    case 4:
        {
            this->username_text = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(this->username_text))->TextChanged += ref new ::Windows::UI::Xaml::Controls::TextChangedEventHandler(this, (void (::Connect4___GUI::LeaderboardPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::TextChangedEventArgs^))&LeaderboardPage::playersearch);
        }
        break;
    case 5:
        {
            this->findplayer_button = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->findplayer_button))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Connect4___GUI::LeaderboardPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&LeaderboardPage::findplayer_button_Click);
        }
        break;
    case 6:
        {
            this->rss = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 7:
        {
            this->r10n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 8:
        {
            this->r10s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 9:
        {
            this->r9n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 10:
        {
            this->r9s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 11:
        {
            this->r8n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 12:
        {
            this->r8s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 13:
        {
            this->r7n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 14:
        {
            this->r7s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 15:
        {
            this->r6n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 16:
        {
            this->r6s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 17:
        {
            this->r5n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 18:
        {
            this->r5s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 19:
        {
            this->r4n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 20:
        {
            this->r4s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 21:
        {
            this->r3s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 22:
        {
            this->r3n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 23:
        {
            this->r2s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 24:
        {
            this->r2n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 25:
        {
            this->r1s = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 26:
        {
            this->r1n = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Connect4___GUI::LeaderboardPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    __connectionId;         // unreferenced
    __target;               // unreferenced
    return nullptr;
}

#pragma warning(pop)


